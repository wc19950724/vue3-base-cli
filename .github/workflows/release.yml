name: Release & Publish

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  GITHUB_TOKEN: ${{ secrets.GHP_TOKEN }}
  CACHE_NAME: cache-node-modules
  RELEASE_BODY: 'Please refer to [CHANGELOG.md](https://github.com/${{ github.event.repository.owner.login }}/${{ github.event.repository.name }}/blob/master/CHANGELOG.md) for details.'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: ./.yarn
          key: ${{ runner.os }}-build-${{ env.CACHE_NAME  }}-${{ hashFiles('./yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.CACHE_NAME  }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: |
          if [ ! -d "./.yarn" ]; then
            mkdir "./.yarn"
          fi

      - name: Install & Build
        run: |
          yarn install
          yarn build

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - name: Get version from package.json
        run: echo VERSION=$(node -pe "require('./package.json').version") >> $GITHUB_ENV
      - name: Create release
        id: create_release
        uses: actions/create-release@v1.1.4
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          body: ${{ env.RELEASE_BODY }}

  publish:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v3
      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
